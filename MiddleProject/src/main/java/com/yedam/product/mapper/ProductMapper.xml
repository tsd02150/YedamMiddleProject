<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.product.mapper.ProductMapper">
	<!-- SEARCH -->
	<select id="searchProductName" resultType="String">
		<![CDATA[
		select product_name 
		from 
			(select product_name 
			from product 
			where product_name 
			like #{search} order 
			by product_name asc)
		where rownum <=5
		]]>
	</select>
	<select id="ctgMain" resultType="mctg">
		select * from maincategory
	</select>
	
	<select id="ctgSub" resultType="sctg">
		select * from subcategory
		where main_category_no=#{mainCategoryNo}
	</select>
	<select id="ctgJoin" resultType="board">
		select * from maincategory join subcategory using(main_category_no)
	</select>
	
	<select id="ctgProd" resultType="product">
		select * from(
		select * from product join member using(company_no))
		join (select * from subcategory join maincategory using(main_category_no))
		using(sub_category_no)
		where main_category_no=#{mainCategoryNo}
		and sub_category_no=#{subCategoryNo}
	</select>
	<!-- PRODUCT -->
	<select id="productList" resultType="product">
		select * from product order by 1 
	</select>
	<select id="myProductList" resultType="product">
		select * from (
		select * from product join (
		select * from subcategory join maincategory using(main_category_no))
		using(sub_category_no)) join member
		using(company_no)
		where company_no=#{companyNo}
		order by product_name
	</select>
	
	<select id="prodWithPage" resultType="product">
 	<![CDATA[
    select b.*
    from (select rownum rn, a.*
          from (select * from product
                order by 1 ) a
          where rownum <= #{page} * 10 ) b
    where b.rn > (#{page} - 1) * 10  
    ]]>
	</select>
	<select id="searchprod" resultType="product">
		select * from product where
		product_no=#{productNo}
	</select>
	<insert id="insertProduct" parameterType="product">
		insert into product (product_no, product_name, price, product_count, sub_category_no,theme_no, company_no)
		values(products_seq.nextval, #{productName}, #{price}, #{productCount},#{subCategoryNo}, #{themeNo}, #{companyNo})
	</insert>
	<update id="updateProduct" parameterType="product">
		update product set
		product_name=#{productName},
		product_price#{price},
		product_count=#{productCount}
		where product_no=#{productNo}
	</update>
	<delete id="deleteProduct" parameterType="int">
		delete from product
		where product_no = #{productNo}
	</delete>

	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<!-- BOARD -->
	<select id="boardList" resultType="board">
		select b.board_no,
		b.board_thumbnail, b.board_title, p.price as "price" from board b
		join product p
		on b.product_no = p.product_no
		order by 1
	</select>
	<select id="boardWithPage" resultType="board">
 	<![CDATA[
    select b.*
    from (select rownum rn, a.*
          from (select * from(
				select * from board join product
				using(product_no)) join subcategory
				using(sub_category_no)
				order by board_no) a
          where rownum <= #{page} * 10 ) b
    where b.rn > (#{page} - 1) * 10  
    ]]>
	</select>
	<select id="categoryList" resultType="board">
 	<![CDATA[
		select * from(
				select rownum rn, a.* from(
				select * from (board join product
				using(product_no)) join subcategory
				using(sub_category_no)
				where sub_category_no=#{subCategoryNo}
				order by board_no) a
 	       where rownum <= #{page}*20) b 
 	       where b.rn > (#{page}-1)*20
    ]]>
	</select>
	<select id="searchboard" resultType="board">
		select*from(select * from(
		select * from board join product using(product_no))
		join subcategory
		using(sub_category_no)
		where board_no=#{boardNo})join
		company
		using(company_no)
	</select>
	<select id="getCount" resultType="int">
		select count(*) from product
	</select>
	

	<insert id="insertBoard" parameterType="board">
		insert into
		board(board_no, board_title, board_thumbnail, board_content,
		board_attach, member_no, product_no)
		values(board_seq.nextval, #{boardTitle},
		#{boardThumbnail}, #{boardContent},#{boardAttach}, #{memberNo}, #{productNo})
	</insert>
	<update id="updateBoard" parameterType="board">
		update board
		set
		board_title=#{boardTitle},
		board_content=#{boardContent},
		board_attach=#{boardAttach},
		board_thumbnail=#{boardThumbnail}
		where board_no = #{boardNo}
	</update>
	<delete id="deleteBoard" parameterType="int">
		delete from board 
		where board_no=#{boardNo}
	</delete>


	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<!-- REVIEW -->
	<select id="reviewList" parameterType="int">
		select * from(
		select * from member join(
		select rb.*, p.product_name from product p join(
		select r.*, b.product_no from review r join board b on(b.board_no=r.board_no))rb
		on(rb.product_no = p.product_no))
		using(member_no)) a
		join
		(select * from orders join order_detail using(order_no)) c
		on(a.product_no=c.product_no and a.member_no=c.member_no)
		where board_no=#{boardNo}
		order by review_date desc
	</select>
	<select id="searchReview" parameterType="int">
		select * from review
		join member
		using(member_no)
		where review_no=#{reviewNo}
	</select>
	<insert id="insertReview" parameterType="review">
		insert into review
		(review_no, review_content, score, review_attach, member_no, board_no,review_date)
		values(review_seq.nextval,#{reviewContent},#{score},#{reviewAttach},#{memberNo},#{boardNo},sysdate)
	</insert>
	<update id="updateReview" parameterType="review">
		update review
		set
		review_content=#{reviewContent},
		score=#{score}
		where review_no=#{reviewNo}
	</update>
	<delete id="deleteReview" parameterType="int">
		delete review 
		where review_no=#{reviewNo}
	</delete>
	<select id="myOrderList" parameterType="String">
		select m.member_no, m.id,m.name, o.order_no, o.order_date, p.product_name, b.*
			from member m 
			join orders o on(m.member_no=o.member_no)
			join order_detail d on o.order_no = d.order_no
			join product p on p.product_no = d.product_no
			join board b on b.product_no = p.product_no
		where m.id=#{id}
	</select>
	
	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<!-- Qna -->
	<select id="qnaList" parameterType="int">

		select m.member_no, m.id, m.name, q.qna_no, q.qna_category, q.qna_title, q.qna_content, q.qna_date, q.qna_hide, q.qna_answer, q.board_no, p.product_no, p.product_name
			from member m 
			join qna q on(m.member_no=q.qna_no)
			join board b on q.board_no = b.board_no
			join product p on b.product_no = p.product_no
		where q.board_no = #{boardNo}
	</select>
	
	<!-- 테마 -->
	<select id="selectTheme" resultType="theme">
 	<![CDATA[
    select b.*
    from (select rownum rn, a.*
          from (select * from board b join product p 
				on(b.product_no = p.product_no)
				join subcategory s on(p.sub_category_no=s.sub_category_no)
				join theme t on(t.theme_no=p.theme_no)
				where t.theme_no=#{theme_no}) a
          where rownum <= #{page} * 10 ) b
    where b.rn > (#{page} - 1) * 10
    order by price  
    ]]>
	</select>
	
</mapper>